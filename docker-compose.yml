version: "3.9"

services:
  db:
    
    image: postgres:17
    container_name: pgdb
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "Caveman@1"
      RESTORE_JOBS: "1"
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: "Caveman@1"
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      APP_JWT_SECRET: VGhpc0lzQVRlc3RTZWNyZXRLZXlGb3JQbHVzaU1ibmtOaWppYXMxMjM=
      APP_JWT_EXPIRATION: "3600000"
    ports:
      - "8080:8080"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: web-frontend
    ports:
      - "4200:4200"
    depends_on:
      - backend

volumes:
  pg_data:

